<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2009 Vastra Gotalandsregionen

      This library is free software; you can redistribute it and/or modify
      it under the terms of version 2.1 of the GNU Lesser General Public
      License as published by the Free Software Foundation.

      This library is distributed in the hope that it will be useful,
      but WITHOUT ANY WARRANTY; without even the implied warranty of
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
      GNU Lesser General Public License for more details.

      You should have received a copy of the GNU Lesser General Public
      License along with this library; if not, write to the
      Free Software Foundation, Inc., 59 Temple Place, Suite 330,
      Boston, MA 02111-1307  USA

-->
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">
	
	<var name="loginCredentials" class="se.vgregion.webbtidbok.State" />
	<var name="loginmessages" class="se.vgregion.webbtidbok.LoginMessages" />
	<var name="cancelbookingMessages" class="se.vgregion.webbtidbok.CancelBookingMessages" />
	<var name="emailStringHandler" class="se.vgregion.webbtidbok.mail.EmailStringHandler"  />
	
	<var name="placesHandler" class="se.vgregion.webbtidbok.Places"  />
	
	
	<input name="pnr" type="string" value="flowScope.loginCredentials.pnr"/>
	<input name="passwd" type="string" value="flowScope.loginCredentials.passwd"/>
	<input name="email" type="string" value="flowScope.emailStringHandler.email" />
	
	<!--       
	<input name="places" type="integer" value="flowScope.placesHandler.placesId" />
	-->
	
	
	<!-- Test state for Calendar 		-->


	
<!--for debugging you have to replace to="validate" with to="loggedin"-->
	<view-state id="start">
		<transition on="login" to="validate" />
		<!-- ajax metoder kolla pnr, eller lÃ¶senord. --> 
	</view-state>
	
	<action-state id="validate">
			<evaluate expression="validationService.validateLogin(loginCredentials, loginmessages)" />
			<transition on="yes" to="doLogin"></transition>
			<transition on="no" to="start"/>		
	</action-state>
	
	<action-state id="doLogin">
		<evaluate expression="loginService.login(loginCredentials)" />
    		<transition on="yes" to="loggedin" />
<!--    		<transition on="yes" to="calendar_test_classic" />-->
    		<transition on="no" to="start">
    			<evaluate expression="loginmessages.setBadLogin()" />
    		</transition>
	</action-state>

<!--  
	<view-state id="calendar_test_classic">
		<on-render>
			<evaluate expression="calendarService.getCalendar(loginCredentials)" /> 
			result="flowScope.calendarUtil" />
		</on-render>
	</view-state>
-->

	<view-state id="loggedin" view="welcome.xhtml" model="booking">
		<on-render>
			<evaluate expression="bookingService.getBooking(loginCredentials)" result="flowScope.booking" />
			<!--  <evaluate expression="calendar.getCalendar()" result="flowScope.cal" /> -->
 		</on-render>
		<transition on="logout" to="loggedout" history="invalidate"/> 
		<transition on="update" to="update" />
		<transition on="delete" to="delete" />
		
	</view-state>
	
	
	<view-state id="delete" view="delete.xhtml">
		  
		<on-render>
			<evaluate expression="bookingService.getBooking(loginCredentials)" result="flowScope.booking" />
			
		</on-render>
		
		<transition on="logout" to="loggedout" history="invalidate"/>
		<transition on="cancel" to="loggedin" />
		<transition on="confirmdelete" to="confirmdeletebooking">
			
		</transition>
	</view-state>
	
	<action-state id="confirmdeletebooking">
			<evaluate expression="bookingService.cancelBooking(loginCredentials)"  />            
			<transition on="yes" to="confirmdelete" />
    		<transition on="no" to="loggedin">
    			<!-- <evaluate expression="loginmessages.setBadLogin()" /> -->
    			<evaluate expression="cancelbookingMessages.setCancelBookingMessage()" />
    	
    		</transition>
	</action-state>
	
	<view-state id="confirmdelete" view="confirmdelete.xhtml">
		
	
		
		<transition on="logout" to="loggedout" history="invalidate"/>
		<transition on="send">
			<!--  
			<set name="requestScope.email" value="flowScope.emailStringHandler.email" type="string" />
			-->
			<evaluate expression="sendMailService.sendMail(emailStringHandler)" />
		</transition>
		
	</view-state>
	
	<action-state id="sendemail">
		<evaluate expression="sendMailService.sendMail(emailStringHandler)" />        
	</action-state>

	<view-state id="login_error">
	</view-state>
	
	
	<view-state id="debug">
	<!--  if we have not defined the correct transition yet, transit to this state. -->
		
	</view-state>
	
	<view-state id="badlogin">
	</view-state>
	
	<action-state id="isEmptyCalendar">
			 <evaluate expression="bookingService.getBookingPlaceSelectItems(loginCredentials)"  result="flowScope.bookingplaces"  >
			 </evaluate>
			  
			 <evaluate expression="placesHandler.setPlacesId(bookingService.getSelectedDefaultItem(loginCredentials))" >
			 </evaluate>
			  
			 <evaluate expression="bookingService.getSelectedPlace(placesHandler, loginCredentials)" result="flowScope.selectedPlace"  >
			 </evaluate>
			 <evaluate expression="calendarService.getCalendar(loginCredentials)"  /> 
			 <evaluate expression="calendarService.isEmptyCalendar()" />
			 <transition on="yes" to="updateNoCalendar"></transition>
			 <transition on="no" to="update"/>	
			
				
	</action-state>
	
	<view-state id="updateNoCalendar" view="updateNoCalendar.xhtml">
	
		<transition on="logout" to="loggedout" history="invalidate"/>
		<transition on="cancel" to="loggedin">
			<evaluate expression="bookingService.setFirstPlacesBoolean(true)" />
		</transition>
		<transition on="displaytimes" to="isEmptyCalendar">
			
			<!--  
			<evaluate expression="placesHandler.setPlacesId(placesHandler.placesId)"   >
			</evaluate>
			-->
			<evaluate expression="bookingService.setSelectedItem(placesHandler, loginCredentials)"   >
			</evaluate>
			
			<evaluate expression="placesHandler.getPlacesId()"  result="viewScope.placesId">
			</evaluate>
			
			
			
		</transition>
	</view-state>
	
	

	<view-state id="update" view="update.xhtml">
		  
		 
		<on-render >

			
			  <!--<evaluate expression="bookingService.getBookingPlaceSelectItems(loginCredentials)"  result="flowScope.bookingplaces" />
			  <evaluate expression="bookingService.getSelectedDefaultItem(loginCredentials)"  result="flowScope.selecteditem" />
			  -->
			  
			  <evaluate expression="bookingService.getBookingPlaceSelectItems(loginCredentials)"  result="flowScope.bookingplaces"  >
			  </evaluate>
			  
			  <!--  
			  <evaluate expression="placesHandler.setPlacesId(bookingService.getSelectedDefaultItem(loginCredentials))"  result="flowScope.selecteditem"  >
			  </evaluate>
			  -->
			  
			  <evaluate expression="placesHandler.setPlacesId(bookingService.getSelectedDefaultItem(loginCredentials))" >
			  </evaluate>
			  
			  <evaluate expression="bookingService.getSelectedPlace(placesHandler, loginCredentials)" result="flowScope.selectedPlace"  >
			  </evaluate>
			  
			  
			  
			  <evaluate expression="calendarService.getCalendar(loginCredentials)"  /> 
		
			  
		</on-render>
		
		
		
		<transition on="logout" to="loggedout" history="invalidate"/>
		<transition on="cancel" to="loggedin">
			<evaluate expression="bookingService.setFirstPlacesBoolean(true)" />
		</transition>
		<transition on="displaytimes" to="isEmptyCalendar">
			
			<!--  
			<evaluate expression="placesHandler.setPlacesId(placesHandler.placesId)"   >
			</evaluate>
			-->
			<evaluate expression="bookingService.setSelectedItem(placesHandler, loginCredentials)"   >
			</evaluate>
			
			<evaluate expression="placesHandler.getPlacesId()"  result="viewScope.placesId">
			</evaluate>
			
			<!--  
			<evaluate expression="bookingService.getSelectedPlace(placesHandler, loginCredentials)" result="flowScope.selectedPlace"  >
			</evaluate>
			-->
			
			
			<!--  
			<evaluate expression="calendarService.isEmptyCalendar()">
			 	
			</evaluate>
			--> 
			
		</transition>
		
		<transition on="prev" to="update">
				<evaluate expression="calendarService.setCalendarMonth(loginCredentials, -1)" />
				<evaluate expression="calendarService.getCalendar(loginCredentials)" />
				<render fragments="displayTimeForm:calendarFragment" />
		</transition>
		<transition on="next">
<!--		<transition on="next" to="update">--> <!-- UGLY, reloads the whole page -->
			<evaluate expression="calendarService.setCalendarMonth(loginCredentials, 1)" />
			<evaluate expression="calendarService.getCalendar(loginCredentials)" />
			<render fragments="displayTimeForm:calendarFragment" />
<!--			<render fragments="displayTimeForm:calendarFragment" />--> <!-- <render fragments="modmeo"> is bound to the sf-namespace
h-namespace is normal java faces. sf supports ajax-stuff like partial page loading -->
		</transition>
		
		<transition on="test_link" to="loggedout">
		
		</transition>
		
	</view-state>
	

	
	
	<view-state id="loggedout">
		<on-render>
			<evaluate expression="loginService.logout(loginCredentials)" />
			<evaluate expression="bookingService.setFirstPlacesBoolean(true)" />
			
		</on-render>
	</view-state>
	
	<end-state id="finish" />
</flow>